-- =============================================
-- –ü–æ–ª–Ω–∞—è —Å—Ö–µ–º–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö EducationalPlatform
-- –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è —è–∑—ã–∫–æ–≤ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è
-- =============================================

-- 1. –ú–û–î–£–õ–¨: –ê–£–¢–ï–ù–¢–ò–§–ò–ö–ê–¶–ò–Ø –ò –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ò
-- =============================================

-- –¢–∞–±–ª–∏—Ü–∞ —Ä–æ–ª–µ–π
CREATE TABLE Roles (
    RoleId INT PRIMARY KEY IDENTITY(1,1),
    RoleName NVARCHAR(50) NOT NULL UNIQUE, -- Student, Teacher, Admin, ContentManager
    Permissions NVARCHAR(MAX), -- JSON —Å –ø—Ä–∞–≤–∞–º–∏ –¥–æ—Å—Ç—É–ø–∞
    Description NVARCHAR(255)
);

-- –í—Å—Ç–∞–≤–∫–∞ –±–∞–∑–æ–≤—ã—Ö —Ä–æ–ª–µ–π
INSERT INTO Roles (RoleName, Description) VALUES 
('Student', '–°—Ç—É–¥–µ–Ω—Ç'),
('Teacher', '–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å'),
('Admin', '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä'),
('ContentManager', '–ö–æ–Ω—Ç–µ–Ω—Ç-–º–µ–Ω–µ–¥–∂–µ—Ä');

-- –¢–∞–±–ª–∏—Ü–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
CREATE TABLE Users (
    UserId INT PRIMARY KEY IDENTITY(1,1),
    Username NVARCHAR(50) NOT NULL UNIQUE,
    Email NVARCHAR(255) NOT NULL UNIQUE,
    PasswordHash NVARCHAR(255) NOT NULL,
    FirstName NVARCHAR(100),
    LastName NVARCHAR(100),
    AvatarUrl NVARCHAR(500),
    LanguagePref NVARCHAR(10) DEFAULT 'ru', -- ru, en
    InterfaceStyle NVARCHAR(20) DEFAULT 'standard', -- standard, teen
    RegistrationDate DATETIME2 DEFAULT GETDATE(),
    RoleId INT FOREIGN KEY REFERENCES Roles(RoleId),
    IsActive BIT DEFAULT 1,
    GameCurrency INT DEFAULT 0, -- –ò–≥—Ä–æ–≤–∞—è –≤–∞–ª—é—Ç–∞ üí∞
    StreakDays INT DEFAULT 0, -- –°–µ—Ä–∏—è –¥–Ω–µ–π –≤—Ö–æ–¥–∞ üî•
    LastLoginDate DATE, -- –î–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å–µ—Ä–∏–∏
    CreatedDate DATETIME2 DEFAULT GETDATE(),
    UpdatedDate DATETIME2 DEFAULT GETDATE()
);

-- –¢–∞–±–ª–∏—Ü–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–π –ø—Ä–∏ –≤—Ö–æ–¥–µ
CREATE TABLE LoginGreetings (
    GreetingId INT PRIMARY KEY IDENTITY(1,1),
    MessageText NVARCHAR(500) NOT NULL,
    LanguageCode NVARCHAR(10) DEFAULT 'ru',
    ForTeens BIT DEFAULT 0, -- –£–ø—Ä–æ—â–µ–Ω–Ω—ã–π —è–∑—ã–∫ –¥–ª—è –ø–æ–¥—Ä–æ—Å—Ç–∫–æ–≤
    IsActive BIT DEFAULT 1
);

-- –í—Å—Ç–∞–≤–∫–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–π
INSERT INTO LoginGreetings (MessageText, LanguageCode, ForTeens) VALUES 
('–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –Ω–µ –∑–∞–±—ã–ª –ø—Ä–æ –º–µ–Ω—è! üíï', 'ru', 0),
('–¢—ã –≤–µ—Ä–Ω—É–ª—Å—è! –ú—ã —Ç–∞–∫ –∂–¥–∞–ª–∏! üéâ', 'ru', 0),
('–ü—Ä–∏–≤–µ—Ç! –¢–≤–æ—è —Å–µ—Ä–∏—è –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç—Å—è! üî•', 'ru', 0),
('–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º! –ì–æ—Ç–æ–≤ –∫ –Ω–æ–≤—ã–º –≤—ã–∑–æ–≤–∞–º? ‚ö°', 'ru', 0),
('–ú—ã —Å–∫—É—á–∞–ª–∏ –ø–æ —Ç–µ–±–µ! üíô', 'ru', 0),
('–ü—Ä–∏–≤–µ—Ç! –í—Ä–µ–º—è —Å—Ç–∞—Ç—å –ª—É—á—à–µ! üåü', 'ru', 0),
('–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º! –¢–≤–æ–∏ –Ω–∞–≤—ã–∫–∏ –∂–¥—É—Ç! üíª', 'ru', 0),
('Thanks for not forgetting me! üíï', 'en', 0),
('You''re back! We''ve been waiting! üéâ', 'en', 0),
('Hello! Your streak continues! üî•', 'en', 0),
('Welcome back! Ready for new challenges? ‚ö°', 'en', 0),
('We missed you! üíô', 'en', 0),
('Hello! Time to get better! üåü', 'en', 0),
('Welcome back! Your skills are waiting! üíª', 'en', 0);

-- –¢–∞–±–ª–∏—Ü–∞ —Å–æ–≥–ª–∞—Å–∏–π –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
CREATE TABLE PrivacyConsents (
    ConsentId INT PRIMARY KEY IDENTITY(1,1),
    UserId INT NOT NULL,
    ConsentText NVARCHAR(MAX) NOT NULL,
    Version NVARCHAR(10) NOT NULL DEFAULT '1.0',
    ConsentDate DATETIME2 DEFAULT GETDATE(),
    IPAddress NVARCHAR(50),
    FOREIGN KEY (UserId) REFERENCES Users(UserId)
);

-- 2. –ú–û–î–£–õ–¨: –Ø–ó–´–ö–ò –ü–†–û–ì–†–ê–ú–ú–ò–†–û–í–ê–ù–ò–Ø –ò –ö–£–†–°–´
-- =============================================

-- –¢–∞–±–ª–∏—Ü–∞ —è–∑—ã–∫–æ–≤ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è
CREATE TABLE ProgrammingLanguages (
    LanguageId INT PRIMARY KEY IDENTITY(1,1),
    LanguageName NVARCHAR(100) NOT NULL UNIQUE,
    IconUrl NVARCHAR(500),
    IsActive BIT DEFAULT 1,
    Description NVARCHAR(500)
);

-- –í—Å—Ç–∞–≤–∫–∞ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö —è–∑—ã–∫–æ–≤
INSERT INTO ProgrammingLanguages (LanguageName, Description) VALUES 
('C#', '–û–±—ä–µ–∫—Ç–Ω–æ-–æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —è–∑—ã–∫ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç Microsoft'),
('Python', '–í—ã—Å–æ–∫–æ—É—Ä–æ–≤–Ω–µ–≤—ã–π —è–∑—ã–∫ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –æ–±—â–µ–≥–æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è'),
('JavaScript', '–Ø–∑—ã–∫ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è –≤–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏'),
('Java', '–ü–æ–ø—É–ª—è—Ä–Ω—ã–π –æ–±—ä–µ–∫—Ç–Ω–æ-–æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —è–∑—ã–∫ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è'),
('C++', '–ú–æ—â–Ω—ã–π —è–∑—ã–∫ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è'),
('PHP', '–°–µ—Ä–≤–µ—Ä–Ω—ã–π —è–∑—ã–∫ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è –≤–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏'),
('Swift', '–Ø–∑—ã–∫ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ iOS –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π'),
('Kotlin', '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π —è–∑—ã–∫ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è Android');

-- –¢–∞–±–ª–∏—Ü–∞ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –∫—É—Ä—Å–æ–≤
CREATE TABLE CourseDifficulties (
    DifficultyId INT PRIMARY KEY IDENTITY(1,1),
    DifficultyName NVARCHAR(50) NOT NULL, -- –õ–µ–≥–∫–∏–π, –°—Ä–µ–¥–Ω–∏–π, –°–ª–æ–∂–Ω—ã–π
    Description NVARCHAR(500),
    HasTheory BIT DEFAULT 1,
    HasPractice BIT DEFAULT 1,
    ColorCode NVARCHAR(7) -- HEX –∫–æ–¥ —Ü–≤–µ—Ç–∞ –¥–ª—è UI
);

-- –í—Å—Ç–∞–≤–∫–∞ —É—Ä–æ–≤–Ω–µ–π —Å–ª–æ–∂–Ω–æ—Å—Ç–∏
INSERT INTO CourseDifficulties (DifficultyName, Description, HasTheory, HasPractice, ColorCode) VALUES 
('–õ–µ–≥–∫–∏–π', '–¢–æ–ª—å–∫–æ —Ç–µ–æ—Ä–∏—è, –±–∞–∑–æ–≤—ã–µ –ø–æ–Ω—è—Ç–∏—è', 1, 0, '#4CAF50'),
('–°—Ä–µ–¥–Ω–∏–π', '–¢–µ–æ—Ä–∏—è + –ø—Ä–∞–∫—Ç–∏–∫–∞, —Å—Ä–µ–¥–Ω–∏–π —É—Ä–æ–≤–µ–Ω—å', 1, 1, '#FF9800'),
('–°–ª–æ–∂–Ω—ã–π', '–¢–æ–ª—å–∫–æ –ø—Ä–∞–∫—Ç–∏–∫–∞, –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π —É—Ä–æ–≤–µ–Ω—å', 0, 1, '#F44336');

-- –¢–∞–±–ª–∏—Ü–∞ –∫—É—Ä—Å–æ–≤
CREATE TABLE Courses (
    CourseId INT PRIMARY KEY IDENTITY(1,1),
    CourseName NVARCHAR(255) NOT NULL,
    Description NVARCHAR(MAX),
    LanguageId INT FOREIGN KEY REFERENCES ProgrammingLanguages(LanguageId),
    DifficultyId INT FOREIGN KEY REFERENCES CourseDifficulties(DifficultyId),
    CreatedByUserId INT FOREIGN KEY REFERENCES Users(UserId),
    CreatedDate DATETIME2 DEFAULT GETDATE(),
    IsPublished BIT DEFAULT 0,
    IsGroupCourse BIT DEFAULT 0, -- –î–ª—è —É—á–µ–±–Ω—ã—Ö –≥—Ä—É–ø–ø –∏–ª–∏ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π
    Price DECIMAL(10,2) DEFAULT 0,
    EstimatedHours INT,
    Tags NVARCHAR(500), -- –î–ª—è –ø–æ–∏—Å–∫–∞
    Rating DECIMAL(3,2) DEFAULT 0, -- –°—Ä–µ–¥–Ω—è—è –æ—Ü–µ–Ω–∫–∞ –∫—É—Ä—Å–∞
    StudentCount INT DEFAULT 0 -- –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤
);

-- –¢–∞–±–ª–∏—Ü–∞ –º–æ–¥—É–ª–µ–π –∫—É—Ä—Å–∞
CREATE TABLE CourseModules (
    ModuleId INT PRIMARY KEY IDENTITY(1,1),
    CourseId INT FOREIGN KEY REFERENCES Courses(CourseId),
    ModuleName NVARCHAR(255) NOT NULL,
    ModuleOrder INT NOT NULL,
    Description NVARCHAR(MAX),
    IsActive BIT DEFAULT 1
);

-- –¢–∞–±–ª–∏—Ü–∞ —É—Ä–æ–∫–æ–≤
CREATE TABLE Lessons (
    LessonId INT PRIMARY KEY IDENTITY(1,1),
    ModuleId INT FOREIGN KEY REFERENCES CourseModules(ModuleId),
    LessonType NVARCHAR(20) NOT NULL, -- theory, practice, test, video
    Title NVARCHAR(500) NOT NULL,
    Content NVARCHAR(MAX), -- –¢–µ–æ—Ä–∏—è –≤ HTML/Markdown
    LessonOrder INT NOT NULL,
    IsActive BIT DEFAULT 1,
    EstimatedTime INT -- –í—Ä–µ–º—è –≤ –º–∏–Ω—É—Ç–∞—Ö
);

-- –¢–∞–±–ª–∏—Ü–∞ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏—Ö —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π
CREATE TABLE PracticeExercises (
    ExerciseId INT PRIMARY KEY IDENTITY(1,1),
    LessonId INT FOREIGN KEY REFERENCES Lessons(LessonId),
    StarterCode NVARCHAR(MAX),
    ExpectedOutput NVARCHAR(MAX),
    TestCases NVARCHAR(MAX), -- JSON —Å —Ç–µ—Å—Ç-–∫–µ–π—Å–∞–º–∏
    Hint NVARCHAR(500),
    Difficulty INT DEFAULT 1 -- 1-5
);

-- 3. –ú–û–î–£–õ–¨: –ì–†–£–ü–ü–´ –ò –ù–ê–ó–ù–ê–ß–ï–ù–ò–Ø
-- =============================================

-- –¢–∞–±–ª–∏—Ü–∞ —É—á–µ–±–Ω—ã—Ö –≥—Ä—É–ø–ø
CREATE TABLE StudyGroups (
    GroupId INT PRIMARY KEY IDENTITY(1,1),
    GroupName NVARCHAR(255) NOT NULL,
    TeacherId INT FOREIGN KEY REFERENCES Users(UserId),
    CourseId INT FOREIGN KEY REFERENCES Courses(CourseId),
    StartDate DATE,
    EndDate DATE,
    IsActive BIT DEFAULT 1,
    MaxStudents INT DEFAULT 30,
    CreatedDate DATETIME2 DEFAULT GETDATE()
);

-- –¢–∞–±–ª–∏—Ü–∞ –∑–∞–ø–∏—Å–∏ –≤ –≥—Ä—É–ø–ø—ã
CREATE TABLE GroupEnrollments (
    EnrollmentId INT PRIMARY KEY IDENTITY(1,1),
    GroupId INT FOREIGN KEY REFERENCES StudyGroups(GroupId),
    StudentId INT FOREIGN KEY REFERENCES Users(UserId),
    EnrollmentDate DATETIME2 DEFAULT GETDATE(),
    Status NVARCHAR(20) DEFAULT 'active' -- active, completed, dropped
);

-- 4. –ú–û–î–£–õ–¨: –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ò –û–¶–ï–ù–ö–ò
-- =============================================

-- –¢–∞–±–ª–∏—Ü–∞ —Ç–µ—Å—Ç–æ–≤
CREATE TABLE Tests (
    TestId INT PRIMARY KEY IDENTITY(1,1),
    LessonId INT FOREIGN KEY REFERENCES Lessons(LessonId),
    Title NVARCHAR(500) NOT NULL,
    Description NVARCHAR(MAX),
    TimeLimitMinutes INT,
    MaxScore INT DEFAULT 100,
    PassingScore INT DEFAULT 60,
    IsActive BIT DEFAULT 1
);

-- –¢–∞–±–ª–∏—Ü–∞ –≤–æ–ø—Ä–æ—Å–æ–≤
CREATE TABLE Questions (
    QuestionId INT PRIMARY KEY IDENTITY(1,1),
    TestId INT FOREIGN KEY REFERENCES Tests(TestId),
    QuestionText NVARCHAR(MAX) NOT NULL,
    QuestionType NVARCHAR(20) NOT NULL, -- single, multiple, code, text
    Score INT DEFAULT 1,
    QuestionOrder INT NOT NULL,
    Explanation NVARCHAR(MAX) -- –û–±—ä—è—Å–Ω–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞
);

-- –¢–∞–±–ª–∏—Ü–∞ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –æ—Ç–≤–µ—Ç–æ–≤
CREATE TABLE AnswerOptions (
    AnswerId INT PRIMARY KEY IDENTITY(1,1),
    QuestionId INT FOREIGN KEY REFERENCES Questions(QuestionId),
    AnswerText NVARCHAR(MAX),
    IsCorrect BIT DEFAULT 0,
    OrderIndex INT DEFAULT 0
);

-- –¢–∞–±–ª–∏—Ü–∞ –ø–æ–ø—ã—Ç–æ–∫ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤
CREATE TABLE TestAttempts (
    AttemptId INT PRIMARY KEY IDENTITY(1,1),
    TestId INT FOREIGN KEY REFERENCES Tests(TestId),
    StudentId INT FOREIGN KEY REFERENCES Users(UserId),
    GroupId INT FOREIGN KEY REFERENCES StudyGroups(GroupId), -- NULL –µ—Å–ª–∏ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –∫—É—Ä—Å
    StartTime DATETIME2 DEFAULT GETDATE(),
    EndTime DATETIME2,
    Score INT,
    AutoScore INT, -- –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ—Ü–µ–Ω–∫–∞
    TeacherScore INT, -- –û—Ü–µ–Ω–∫–∞ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è
    Status NVARCHAR(20) DEFAULT 'in_progress', -- in_progress, completed, under_review
    IsDisputed BIT DEFAULT 0, -- –û—Å–ø–æ—Ä–µ–Ω–∞ —Å—Ç—É–¥–µ–Ω—Ç–æ–º
    TeacherComment NVARCHAR(MAX)
);

-- –¢–∞–±–ª–∏—Ü–∞ –æ—Ç–≤–µ—Ç–æ–≤ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤
CREATE TABLE StudentAnswers (
    AnswerId INT PRIMARY KEY IDENTITY(1,1),
    AttemptId INT FOREIGN KEY REFERENCES TestAttempts(AttemptId),
    QuestionId INT FOREIGN KEY REFERENCES Questions(QuestionId),
    SelectedAnswerId INT FOREIGN KEY REFERENCES AnswerOptions(AnswerId), -- NULL –¥–ª—è –∫–æ–¥–∞
    CodeAnswer NVARCHAR(MAX),
    TextAnswer NVARCHAR(MAX),
    IsCorrect BIT, -- –†–µ–∑—É–ª—å—Ç–∞—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏
    TeacherComment NVARCHAR(MAX),
    PointsEarned INT DEFAULT 0
);

-- 5. –ú–û–î–£–õ–¨: –ü–†–û–ì–†–ï–°–° –ò –ì–ï–ô–ú–ò–§–ò–ö–ê–¶–ò–Ø
-- =============================================

-- –¢–∞–±–ª–∏—Ü–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤
CREATE TABLE StudentProgress (
    ProgressId INT PRIMARY KEY IDENTITY(1,1),
    StudentId INT FOREIGN KEY REFERENCES Users(UserId),
    CourseId INT FOREIGN KEY REFERENCES Courses(CourseId),
    LessonId INT FOREIGN KEY REFERENCES Lessons(LessonId),
    Status NVARCHAR(20) DEFAULT 'not_started', -- not_started, in_progress, completed
    StartDate DATETIME2,
    CompletionDate DATETIME2,
    Score INT,
    AttemptsCount INT DEFAULT 0,
    TimeSpent INT DEFAULT 0 -- –í—Ä–µ–º—è –≤ –º–∏–Ω—É—Ç–∞—Ö
);

-- –¢–∞–±–ª–∏—Ü–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π
CREATE TABLE Achievements (
    AchievementId INT PRIMARY KEY IDENTITY(1,1),
    Name NVARCHAR(255) NOT NULL,
    Description NVARCHAR(MAX),
    IconUrl NVARCHAR(500),
    ConditionType NVARCHAR(50), -- courses_completed, perfect_scores, streak, currency
    ConditionValue INT, -- –ù–∞–ø—Ä–∏–º–µ—Ä, 5 –∫—É—Ä—Å–æ–≤
    RewardCurrency INT DEFAULT 0,
    IsActive BIT DEFAULT 1
);

-- –í—Å—Ç–∞–≤–∫–∞ –±–∞–∑–æ–≤—ã—Ö –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π
INSERT INTO Achievements (Name, Description, IconUrl, ConditionType, ConditionValue, RewardCurrency) VALUES 
('–ü–µ—Ä–≤—ã–π —à–∞–≥', '–ó–∞–≤–µ—Ä—à–∏–ª –ø–µ—Ä–≤—ã–π –∫—É—Ä—Å', 'üéØ', 'courses_completed', 1, 10),
('–ù–∞—á–∏–Ω–∞—é—â–∏–π –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç', '–ó–∞–≤–µ—Ä—à–∏–ª 3 –∫—É—Ä—Å–∞', 'üöÄ', 'courses_completed', 3, 50),
('–û–ø—ã—Ç–Ω—ã–π –∫–æ–¥–µ—Ä', '–ó–∞–≤–µ—Ä—à–∏–ª 10 –∫—É—Ä—Å–æ–≤', 'üíª', 'courses_completed', 10, 100),
('–ë–æ–≥ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è', '–ó–∞–≤–µ—Ä—à–∏–ª 25 –∫—É—Ä—Å–æ–≤', 'üèÜ', 'courses_completed', 25, 500),
('–°–µ—Ä–∏–π–Ω—ã–π —É—á–µ–Ω–∏–∫', '–í—Ö–æ–¥–∏–ª 7 –¥–Ω–µ–π –ø–æ–¥—Ä—è–¥', 'üî•', 'streak', 7, 25),
('–ù–µ–ø—Ä–µ—Ä—ã–≤–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ', '–í—Ö–æ–¥–∏–ª 30 –¥–Ω–µ–π –ø–æ–¥—Ä—è–¥', '‚≠ê', 'streak', 30, 100),
('–û—Ç–ª–∏—á–Ω–∏–∫', '–ü–æ–ª—É—á–∏–ª 5 –æ—Ç–ª–∏—á–Ω—ã—Ö –æ—Ü–µ–Ω–æ–∫', 'üåü', 'perfect_scores', 5, 50),
('–ë–æ–≥–∞—á', '–ù–∞–∫–æ–ø–∏–ª 1000 –º–æ–Ω–µ—Ç', 'üí∞', 'currency', 1000, 0);

-- –¢–∞–±–ª–∏—Ü–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π —Å—Ç—É–¥–µ–Ω—Ç–æ–≤
CREATE TABLE StudentAchievements (
    StudentAchievementId INT PRIMARY KEY IDENTITY(1,1),
    StudentId INT FOREIGN KEY REFERENCES Users(UserId),
    AchievementId INT FOREIGN KEY REFERENCES Achievements(AchievementId),
    EarnedDate DATETIME2 DEFAULT GETDATE(),
    IsVisible BIT DEFAULT 1
);

-- –¢–∞–±–ª–∏—Ü–∞ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è
CREATE TABLE ProfileCustomizations (
    CustomizationId INT PRIMARY KEY IDENTITY(1,1),
    StudentId INT FOREIGN KEY REFERENCES Users(UserId),
    ItemType NVARCHAR(50), -- avatar_frame, emoji, theme, badge
    ItemValue NVARCHAR(500),
    IsActive BIT DEFAULT 0,
    PurchasedWithCurrency BIT DEFAULT 0,
    PurchaseDate DATETIME2
);

-- 6. –ú–û–î–£–õ–¨: –ö–û–ú–ú–£–ù–ò–ö–ê–¶–ò–Ø –ò –û–¢–ó–´–í–´
-- =============================================

-- –¢–∞–±–ª–∏—Ü–∞ –æ—Ç–∑—ã–≤–æ–≤ –æ –∫—É—Ä—Å–∞—Ö
CREATE TABLE CourseReviews (
    ReviewId INT PRIMARY KEY IDENTITY(1,1),
    CourseId INT FOREIGN KEY REFERENCES Courses(CourseId),
    StudentId INT FOREIGN KEY REFERENCES Users(UserId),
    Rating INT CHECK (Rating >= 0 AND Rating <= 5),
    Comment NVARCHAR(MAX),
    ReviewDate DATETIME2 DEFAULT GETDATE(),
    IsApproved BIT DEFAULT 1,
    HelpfulCount INT DEFAULT 0 -- –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ "–ø–æ–ª–µ–∑–Ω–æ"
);

-- –¢–∞–±–ª–∏—Ü–∞ –≥—Ä—É–ø–ø–æ–≤—ã—Ö —á–∞—Ç–æ–≤
CREATE TABLE GroupChats (
    MessageId INT PRIMARY KEY IDENTITY(1,1),
    GroupId INT FOREIGN KEY REFERENCES StudyGroups(GroupId),
    SenderId INT FOREIGN KEY REFERENCES Users(UserId),
    MessageText NVARCHAR(MAX) NOT NULL,
    SentDate DATETIME2 DEFAULT GETDATE(),
    IsRead BIT DEFAULT 0,
    MessageType NVARCHAR(20) DEFAULT 'text' -- text, file, image
);

-- –¢–∞–±–ª–∏—Ü–∞ –æ–±—Ä–∞—â–µ–Ω–∏–π –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É
CREATE TABLE SupportTickets (
    TicketId INT PRIMARY KEY IDENTITY(1,1),
    UserId INT FOREIGN KEY REFERENCES Users(UserId),
    Subject NVARCHAR(500) NOT NULL,
    Description NVARCHAR(MAX) NOT NULL,
    TicketType NVARCHAR(50) DEFAULT 'bug', -- bug, question, feature, complaint
    Status NVARCHAR(20) DEFAULT 'open', -- open, in_progress, resolved, closed
    Priority INT DEFAULT 3, -- 1: high, 2: medium, 3: low
    CreatedDate DATETIME2 DEFAULT GETDATE(),
    ResolvedDate DATETIME2,
    AdminComment NVARCHAR(MAX),
    AssignedTo INT FOREIGN KEY REFERENCES Users(UserId)
);

-- 7. –ú–û–î–£–õ–¨: –ö–û–ù–ö–£–†–°–´ –ò –ù–û–í–û–°–¢–ò
-- =============================================

-- –¢–∞–±–ª–∏—Ü–∞ –∫–æ–Ω–∫—É—Ä—Å–æ–≤
CREATE TABLE Contests (
    ContestId INT PRIMARY KEY IDENTITY(1,1),
    ContestName NVARCHAR(255) NOT NULL,
    Description NVARCHAR(MAX),
    LanguageId INT FOREIGN KEY REFERENCES ProgrammingLanguages(LanguageId),
    StartDate DATETIME2,
    EndDate DATETIME2,
    MaxParticipants INT,
    PrizeCurrency INT DEFAULT 0,
    IsActive BIT DEFAULT 1,
    OnlyForGroups BIT DEFAULT 1, -- –¢–æ–ª—å–∫–æ –¥–ª—è —É—á–µ–±–Ω—ã—Ö –≥—Ä—É–ø–ø
    CreatedBy INT FOREIGN KEY REFERENCES Users(UserId)
);

-- –¢–∞–±–ª–∏—Ü–∞ –∑–∞—è–≤–æ–∫ –Ω–∞ –∫–æ–Ω–∫—É—Ä—Å—ã
CREATE TABLE ContestSubmissions (
    SubmissionId INT PRIMARY KEY IDENTITY(1,1),
    ContestId INT FOREIGN KEY REFERENCES Contests(ContestId),
    StudentId INT FOREIGN KEY REFERENCES Users(UserId),
    ProjectName NVARCHAR(255),
    ProjectFileUrl NVARCHAR(500), -- –°—Å—ã–ª–∫–∞ –Ω–∞ ZIP-—Ñ–∞–π–ª
    Description NVARCHAR(MAX),
    SubmissionDate DATETIME2 DEFAULT GETDATE(),
    TeacherScore INT,
    TeacherComment NVARCHAR(MAX),
    IsWinner BIT DEFAULT 0
);

-- –¢–∞–±–ª–∏—Ü–∞ –Ω–æ–≤–æ—Å—Ç–µ–π
CREATE TABLE News (
    NewsId INT PRIMARY KEY IDENTITY(1,1),
    Title NVARCHAR(500) NOT NULL,
    Content NVARCHAR(MAX) NOT NULL,
    AuthorId INT FOREIGN KEY REFERENCES Users(UserId),
    PublishedDate DATETIME2 DEFAULT GETDATE(),
    IsActive BIT DEFAULT 1,
    LanguageCode NVARCHAR(10) DEFAULT 'ru',
    ForTeens BIT DEFAULT 0,
    ImageUrl NVARCHAR(500),
    ViewsCount INT DEFAULT 0
);

-- 8. –ú–û–î–£–õ–¨: –ú–ê–ì–ê–ó–ò–ù –ò –í–ê–õ–Æ–¢–ê
-- =============================================

-- –¢–∞–±–ª–∏—Ü–∞ —Ç–æ–≤–∞—Ä–æ–≤ –≤ –º–∞–≥–∞–∑–∏–Ω–µ
CREATE TABLE ShopItems (
    ItemId INT PRIMARY KEY IDENTITY(1,1),
    Name NVARCHAR(255) NOT NULL,
    Description NVARCHAR(MAX),
    Price INT NOT NULL, -- –¶–µ–Ω–∞ –≤ –∏–≥—Ä–æ–≤–æ–π –≤–∞–ª—é—Ç–µ
    ItemType NVARCHAR(50) NOT NULL, -- avatar_frame, emoji, theme, badge
    Icon NVARCHAR(500),
    IsActive BIT DEFAULT 1,
    CreatedDate DATETIME2 DEFAULT GETDATE()
);

-- –í—Å—Ç–∞–≤–∫–∞ –±–∞–∑–æ–≤—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤
INSERT INTO ShopItems (Name, Description, Price, ItemType, Icon) VALUES 
('–ó–æ–ª–æ—Ç–∞—è —Ä–∞–º–∫–∞', '–ó–æ–ª–æ—Ç–∞—è —Ä–∞–º–∫–∞ –¥–ª—è –∞–≤–∞—Ç–∞—Ä–∞', 100, 'avatar_frame', 'üñºÔ∏è'),
('–°–µ—Ä–µ–±—Ä—è–Ω–∞—è —Ä–∞–º–∫–∞', '–°–µ—Ä–µ–±—Ä—è–Ω–∞—è —Ä–∞–º–∫–∞ –¥–ª—è –∞–≤–∞—Ç–∞—Ä–∞', 50, 'avatar_frame', 'üñºÔ∏è'),
('–≠–º–æ–¥–∑–∏ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–∞', '–≠–º–æ–¥–∑–∏ üíª –¥–ª—è –ø—Ä–æ—Ñ–∏–ª—è', 25, 'emoji', 'üíª'),
('–≠–º–æ–¥–∑–∏ –æ–≥–Ω—è', '–≠–º–æ–¥–∑–∏ üî• –¥–ª—è –ø—Ä–æ—Ñ–∏–ª—è', 25, 'emoji', 'üî•'),
('–¢–µ–º–∞ "–¢–µ–º–Ω–∞—è"', '–¢–µ–º–Ω–∞—è —Ç–µ–º–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞', 200, 'theme', 'üåô'),
('–ó–Ω–∞—á–æ–∫ "–û—Ç–ª–∏—á–Ω–∏–∫"', '–ó–Ω–∞—á–æ–∫ –¥–ª—è –ø—Ä–æ—Ñ–∏–ª—è', 150, 'badge', 'üèÜ');

-- –¢–∞–±–ª–∏—Ü–∞ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
CREATE TABLE UserInventory (
    InventoryId INT PRIMARY KEY IDENTITY(1,1),
    UserId INT FOREIGN KEY REFERENCES Users(UserId),
    ItemId INT FOREIGN KEY REFERENCES ShopItems(ItemId),
    PurchaseDate DATETIME2 DEFAULT GETDATE(),
    IsEquipped BIT DEFAULT 0
);

-- –¢–∞–±–ª–∏—Ü–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –≤–∞–ª—é—Ç—ã
CREATE TABLE CurrencyTransactions (
    TransactionId INT PRIMARY KEY IDENTITY(1,1),
    UserId INT FOREIGN KEY REFERENCES Users(UserId),
    Amount INT NOT NULL, -- –ú–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º
    TransactionType NVARCHAR(20) NOT NULL, -- income, expense, reward, purchase
    Reason NVARCHAR(255),
    TransactionDate DATETIME2 DEFAULT GETDATE(),
    RelatedItemId INT -- –°–≤—è–∑–∞–Ω–Ω—ã–π —Ç–æ–≤–∞—Ä –∏–ª–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ
);

-- 9. –°–û–ó–î–ê–ù–ò–ï –ò–ù–î–ï–ö–°–û–í –î–õ–Ø –ü–†–û–ò–ó–í–û–î–ò–¢–ï–õ–¨–ù–û–°–¢–ò
-- =============================================

-- –ò–Ω–¥–µ–∫—Å—ã –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–æ–∏—Å–∫–∞
CREATE INDEX IX_Users_Username ON Users(Username);
CREATE INDEX IX_Users_Email ON Users(Email);
CREATE INDEX IX_Users_RoleId ON Users(RoleId);
CREATE INDEX IX_PrivacyConsents_UserId ON PrivacyConsents(UserId);
CREATE INDEX IX_StudentProgress_StudentId ON StudentProgress(StudentId);
CREATE INDEX IX_StudentProgress_CourseId ON StudentProgress(CourseId);
CREATE INDEX IX_TestAttempts_StudentId ON TestAttempts(StudentId);
CREATE INDEX IX_TestAttempts_TestId ON TestAttempts(TestId);
CREATE INDEX IX_CourseReviews_CourseId ON CourseReviews(CourseId);
CREATE INDEX IX_GroupChats_GroupId ON GroupChats(GroupId);
CREATE INDEX IX_SupportTickets_UserId ON SupportTickets(UserId);
CREATE INDEX IX_SupportTickets_Status ON SupportTickets(Status);

-- 10. –°–û–ó–î–ê–ù–ò–ï –ü–†–ï–î–°–¢–ê–í–õ–ï–ù–ò–ô –î–õ–Ø –ê–ù–ê–õ–ò–¢–ò–ö–ò
-- =============================================

-- –ü—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
CREATE VIEW UserStatistics AS
SELECT 
    u.UserId,
    u.Username,
    u.FirstName,
    u.LastName,
    u.GameCurrency,
    u.StreakDays,
    COUNT(DISTINCT sp.CourseId) as TotalCourses,
    COUNT(DISTINCT CASE WHEN sp.Status = 'completed' THEN sp.CourseId END) as CompletedCourses,
    AVG(CAST(sp.Score AS FLOAT)) as AverageScore,
    COUNT(DISTINCT sa.AchievementId) as AchievementsCount
FROM Users u
LEFT JOIN StudentProgress sp ON u.UserId = sp.StudentId
LEFT JOIN StudentAchievements sa ON u.UserId = sa.StudentId
GROUP BY u.UserId, u.Username, u.FirstName, u.LastName, u.GameCurrency, u.StreakDays;

-- –ü—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∫—É—Ä—Å–æ–≤
CREATE VIEW CourseStatistics AS
SELECT 
    c.CourseId,
    c.CourseName,
    c.Rating,
    c.StudentCount,
    COUNT(DISTINCT sp.StudentId) as EnrolledStudents,
    COUNT(DISTINCT CASE WHEN sp.Status = 'completed' THEN sp.StudentId END) as CompletedStudents,
    AVG(CAST(sp.Score AS FLOAT)) as AverageScore
FROM Courses c
LEFT JOIN StudentProgress sp ON c.CourseId = sp.CourseId
GROUP BY c.CourseId, c.CourseName, c.Rating, c.StudentCount;

PRINT '–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö EducationalPlatform —Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ! üéâ';
PRINT '–í—Å–µ —Ç–∞–±–ª–∏—Ü—ã, –∏–Ω–¥–µ–∫—Å—ã –∏ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã.';
PRINT '–ì–æ—Ç–æ–≤–æ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é! üíª';

